openapi: 3.1.1
info:
  title: API сервер для проекта «Шесть городов».
  description: API сервер для проекта «Шесть городов».
  version: 1.0.0
servers:
  - url: 'https'

paths:
  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOffers'
        required: true
      responses:
        201:
          description: Новое предложения создано
        400:
          description: Некорректная валидация
        401:
          description: Не авторизованный пользователь
      description: Создание нового предложения

    put:
      tags:
        - offers
      summary: Редактирование предложения
      responses:
        200:
          description: Предложение успешно отредактировано
        400:
          description: Пользователь может редактировать только свои предложения
        401:
          description: Не авторизованный пользователь
      description: Редактирование существующего предложения

    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      responses:
        200:
          description: Предложение успешно удалено
        400:
          description: Пользователь может удалять только свои предложения
        401:
          description: Не авторизованный пользователь
      description: Удаление существующего объявления

    get:
      parameters:
        - name: requestsCount
          in: query
          description: Количество запрашиваемых предложений (Опционально)
          required: false
          schema:
            type: integer
      tags:
        - offers
      summary: Список предложений по аренде
      responses:
        200:
          description: Успешно получен список предложений
        401:
          description: Не авторизованный пользователь

  /offers/details:
    get:
      tags:
        - offers
      summary: Детальная информация по предложению
      responses:
        200:
          description: Детальная информация по предложению успешно получена

  /comments?count=50:
    get:
      tags:
        - comment
      summary: Список комментариев для объявления
      responses:
        200:
          description: Список комментариев для объявления успешно получен
    post:
      tags:
        - comment
      summary: Добавление комментария
      responses:
        201:
          description: Успешное добавление комментария
        400:
          description: Некорректная валидация
        401:
          description: Не авторизованный пользователь

  /users:
    post:
      tags:
        - users
      summary:  Создание нового пользователя
      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true
      responses:
        201:
          description: Успешное создание нового пользователя
        400:
          description: Некорректная валидация
        409:
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Вход в закрытую часть приложения
      description: Авторизует пользователя на основе логина и пароля
      responses:
        201:
          description: Успешная авторизация
        400:
          description: Некорректная валидация
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю
      responses:
        200:
          description: Успешная проверка
        400:
          description: Некорректная валидация

  /termination:
    get:
      tags:
        - users
      summary: Выход из закрытой части приложения (только если авторизация выполняется на основе сессий)
      responses:
        200:
          description: Успешный выход
        401:
          description: Не авторизованный пользователь

  /offers/premium:
    get:
      tags:
        - offers
      summary: Премиальные предложения для города
      responses:
        200:
          description: Возвращает не больше 3 предложений с флагом «Premium»

  /offers/favorite:
    get:
      tags:
        - offers
      summary:  Список избранных предложений
      responses:
        200:
          description: Возвращает список избранных предложений
        401:
          description: Не авторизованный пользователь
    post:
      tags:
        - offers
      summary: Добавление предложения в избранное
      responses:
        201:
          description: Добавление прошло успешно
        401:
          description: Не авторизованный пользователь
    delete:
      tags:
        - offers
      summary: Удаление предложения из избранного
      responses:
        200:
          description: Удаление прошло успешно
        401:
          description: Не авторизованный пользователь

tags:
  - name: users
    description: Действия с пользователями
  - name: offers
    description: Действия с объявлениями
  - name: comment
    description: Действия с комментариями

components:
  schemas:
    createUser:
      type: object
      properties:
        email:
          type: string
          example: "keks@htmlacademy.ru"

        name:
          type: string
          example: 'Иван Котельников'

        password:
          type: string
          example: "123456"

        avatar?:
          type: string
          example: 'studio-01.jpg'
          
        userType:
          type: string
          example: 'pro'

    user:
      type: object
      properties:
        id:
          type: string
          example: "6329c3d6a04ab1061c6425ea"
        email:
          type: string
          example: 'keks@htmlacademy.ru'

    createOffers:
      type: object
      properties:
        name:
          type: string
          example:  "Просто лучшее"

        description:
          type: string
          example: "Красивое, хорошее"

        createdDate:
          type: string
          format: date
          example: '2024.05.13'

        city:
          type: string
          example: 'Amsterdam'

        previewImg:
          type: string
          example: "studio-photos.jpg"

        images:
          type: array
          items: 
            type: string
          example: [ "apartment-01.jpg;","apartment-02.jpg;" ]

        isPremium:
          type: boolean

        isFavourites:
          type: boolean

        rating:
          type: number
          example: 5

        livingPlace:
          type: string
          example: 'House'

        roomsCount:
          type: number
          example: 3

        peopleCount:
          type: number
          example: 2

        price:
          type: number
          example: 60000

        options:
          type: string
          example: 'Breakfast'

        author:
          type: string
          example: "Иван Котельников"

        commentsCount:
          type: number
          example: 1

        coordinates:
          type: string
          example: '48.85661,2.351499'

    createComments:
      type: object
      properties:
        text:
          type: string
          example: "Красивое"

        author:
          type: string
          example: 'Ксения Котельникова'
